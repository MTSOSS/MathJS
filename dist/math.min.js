"use strict";function getUnts(a){a=a.toString();const b=a.match(/[a-zA-Z]+/g);return b?b.join(""):""}function getNumericalValue(a){a=a.toString();const b=a.match(/\d+/);return b?+b[0]:0}function convertToRadians(a){var b=Math.PI;let c=getNumericalValue(a);if("deg"==getUnts(a)||""==getUnts(a))return c*b/180;if("grad"==getUnts(a))return c*b/200;if("rad"==getUnts(a))return c;throw new Error("Invalid Unit")}const math={e:Math.E,PI:Math.PI,LN2:Math.LN2,LN10:Math.LN10,TAU:2*Math.PI,LOG2E:Math.LOG2E,LOG10E:Math.LOG10E,EPSILON:Number.EPSILON,PHI:(1+Math.sqrt(5))/2,add(...a){return a.reduce((c,a)=>c+a,0)},subtract(...a){return a.reduce((c,a)=>c-a)},multiply(...a){return a.reduce((c,a)=>c*a)},divide(...a){return a.reduce((c,a)=>c/a)},square(a){return a*a},cube(a){return a*a*a},power(a,b){return Math.pow(a,b)},root(a,b){return Math.pow(a,1/b)},round(a){return Math.round(a)},roundUp(a){return Math.ceil(a)},roundDown(a){return Math.floor(a)},absolute(a){return Math.abs(a)},remainder(a,b){return a%b},max(...a){return Math.max(...a)},min(...a){return Math.min(...a)},sqrt(a){return Math.sqrt(a)},cbrt(a){return Math.cbrt(a)},hypotenuse(c,a){return Math.hypot(c,a)},average(...a){return a.reduce((c,a)=>c+a,0)/a.length},mean(...a){return this.average(...a)},median(...a){a.sort((c,a)=>c-a);const b=Math.floor(a.length/2);return 0==a.length%2?(a[b-1]+a[b])/2:a[b]},mode(...a){let b="string";"string"==typeof a[a.length-1]&&["string","array"].includes(a[a.length-1].toString())&&(b=a.pop());const c={};a.forEach(a=>c[a]=(c[a]||0)+1);let d=0,f=[];for(const b in c)c[b]>d?(f=[parseInt(b)],d=c[b]):c[b]===d&&f.push(parseInt(b));return"string"===b?f.join(", "):f},range(...a){let b="string";"string"==typeof a[a.length-1]&&["string","array"].includes(a[a.length-1])&&(b=a.pop());const c=a.filter(a=>"number"==typeof a);c.sort((c,a)=>c-a);const d=[c[0],c[c.length-1]];return"string"===b?d.join(", "):d},factors(a,b="array"){const c=[];for(let d=1;d<=a;d++)0==a%d&&c.push(d);return"string"===b?c.join(", "):c},factorsOf(a,b="array"){return this.factors(a,b)},primeFactors(a,b="array"){const c=[];for(let d=2;d<=a;d++)for(;0==a%d;)c.push(d),a/=d;return"string"===b?c.join(", "):c},primeFactorsOf(a,b="array"){return this.primeFactors(a,b)},greatestCommonDivisor(...a){const c=(a,b)=>b?c(b,a%b):a;return a.reduce((d,a)=>c(d,a))},GCD(...a){return this.greatestCommonDivisor(...a)},highestCommonFactor(...a){return this.greatestCommonDivisor(...a)},HCF(...a){return this.greatestCommonDivisor(...a)},leastCommonMultiple(...a){const c=(a,b)=>b?c(b,a%b):a,d=(b,d)=>b*d/a.reduce((d,a)=>c(d,a));return a.reduce((c,a)=>d(c,a))},LCM(...a){return this.leastCommonMultiple(...a)},isEqual(c,a){return c===a},isEven(a){return 0==a%2},isOdd(a){return 0!=a%2},isPositive(a){return 0<a},isNegative(a){return 0>a},isZero(a){return 0===a},isInteger(a){return Number.isInteger(a)},isFloat(a){return+a===a&&0!=a%1},isPrime(a){if(1==a)return!1;if(2>a)return!1;for(let b=2;b<a;b++)if(0==a%b)return!1;return!0},isComposite(a){return 1!=a&&!this.isPrime(a)},isDivisible(a,b){return 0==a%b},isPowerOf(a,b){var c=Math.log;return 0==c(a)/c(b)%1},isPerfectSquare(a){return 0==Math.sqrt(a)%1},isPerfectCube(a){return 0==Math.cbrt(a)%1},isPerfectPower(a,c){var b=Math.log;return 0==b(a)/b(c)%1},isMultiple(a,b){return 0==a%b},isFactor(a,b){return 0==b%a},isArmstrong(c){return c===c.toString().split("").reduce((d,a)=>d+Math.pow(parseInt(a),c.toString().length),0)},isPalindrome(a){return a.toString()===a.toString().split("").reverse().join("")},isFinite(a){return Number.isFinite(a)},isInfinite(a){return!Number.isFinite(a)},factorial(a){let b=1;if(0===a)return 1;for(let c=2;c<=a;c++)b*=c;return b},fibonacci(c){let d,e=1,f=0;for(;0<=c;c--)d=e,e+=f,f=d;return f},fibonacciSeries(a,b="string"){let c=[];for(let d=0;d<a;d++)c.push(this.fibonacci(d));return"string"===b?c.join(", "):c},random(c,a){return Math.floor(Math.random()*(a-c+1))+c},log(a,c){var b=Math.log;if(c!==void 0){let d=b(a)/b(c);return+d.toFixed(2)}let d=b(a);return+d.toFixed(2)},logBase2(a){return Math.log2(a)},logBase5(a){var b=Math.log;return b(a)/b(5)},logBase10(a){return Math.log10(a)},sin(a){let b=Math.sin(convertToRadians(a));return+b.toFixed(2)},cos(a){let b=Math.cos(convertToRadians(a));return+b.toFixed(2)},tan(a){let b=Math.tan(convertToRadians(a));return+b.toFixed(2)},cot(a){let b=1/Math.tan(convertToRadians(a));return+b.toFixed(2)},sec(a){let b=1/Math.cos(convertToRadians(a));return+b.toFixed(2)},csc(a){let b=1/Math.sin(convertToRadians(a));return+b.toFixed(2)},evaluateExpression(a,b){try{if(b)for(let c in b){const d=new RegExp("\\b"+c+"\\b","g");a=a.replace(d,b[c].toString())}for(let b in math){const c=new RegExp(`\\b${b}\\b`,"g");a=a.replace(c,`math['${b}']`)}return a=a.replace(/\^/g,"**").replace(/รท/g,"/").replace(/ร/g,"*"),Function("math",`'use strict'; return (${a})`)(math)}catch(a){throw console.error("Error occurred while evaluating the expression:",a),new Error("Error occurred while evaluating the expression: "+a)}},evaluate(a,b){return this.evaluateExpression(a,b)}};(function(a,b){"function"==typeof define&&define.amd?define([],b):"object"==typeof exports?module.exports=b():"object"==typeof module&&"object"==typeof module.exports?(module.exports=b(),module.exports.default=b()):a.math=b()})("undefined"==typeof self?this:self,function(){return math});